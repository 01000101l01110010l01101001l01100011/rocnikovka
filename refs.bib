@article{10.1093/comjnl/5.1.10,
  title = {Quicksort},
  author = {Hoare, C. A. R.},
  date = {1962-01},
  journaltitle = {The Computer Journal},
  volume = {5},
  number = {1},
  eprint = {https://academic.oup.com/comjnl/article-pdf/5/1/10/1111445/050010.pdf},
  pages = {10--16},
  issn = {0010-4620},
  doi = {10.1093/comjnl/5.1.10},
  url = {https://doi.org/10.1093/comjnl/5.1.10},
  abstract = {A description is given of a new method of sorting in the random-access store of a computer. The method compares very favourably with other known methods in speed, in economy of storage, and in ease of programming. Certain refinements of the method, which may be useful in the optimization of inner loops, are described in the second part of the paper.}
}

@misc{adamklepacDefinicePolytopu2024,
  title = {Definice polytopu},
  author = {{Adam Klepáč}},
  date = {2024-01-09},
  langid = {czech}
}

@inproceedings{benlFormalCorrectnessProofs1999,
  title = {Formal {{Correctness Proofs}} of {{Functional Programs}}: {{Dijkstra}}’s {{Algorithm}}, a {{Case Study}}},
  shorttitle = {Formal {{Correctness Proofs}} of {{Functional Programs}}},
  booktitle = {Computational {{Logic}}},
  author = {Benl, Holger and Schwichtenberg, Helmut},
  editor = {Berger, Ulrich and Schwichtenberg, Helmut},
  date = {1999},
  pages = {113--126},
  publisher = {Springer},
  location = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-58622-4_4},
  abstract = {One can argue that writing proofs might be better than writing programs, for the following simple reason: There is no algorithm that can check whether a program meets its specification, but it is easy to check whether a given proof is correct.},
  isbn = {978-3-642-58622-4},
  langid = {english},
  keywords = {Compute Node,Correctness Proof,Formal Proof,Induction Hypothesis,Weighted Graph},
  file = {/home/eric/Zotero/storage/ZIK5TAK2/Benl and Schwichtenberg - 1999 - Formal Correctness Proofs of Functional Programs .pdf}
}
