@inreference{DijkstraAlgorithm2023,
  title = {Dijkstra's Algorithm},
  booktitle = {Wikipedia},
  date = {2023-12-02T20:35:49Z},
  url = {https://en.wikipedia.org/w/index.php?title=Dijkstra%27s_algorithm&oldid=1188007139},
  urldate = {2023-12-06},
  abstract = {Dijkstra's algorithm ( DYKE-strəz) is an algorithm for finding the shortest paths between nodes in a weighted graph, which may represent, for example, road networks.  It was conceived by computer scientist Edsger W. Dijkstra in 1956 and published three years later.The algorithm exists in many variants. Dijkstra's original algorithm found the shortest path between two given nodes, but a more common variant fixes a single node as the "source" node and finds shortest paths from the source to all other nodes in the graph, producing a shortest-path tree. For a given source node in the graph, the algorithm finds the shortest path between that node and every other.:{$\mkern1mu$}196–206{$\mkern1mu$} It can also be used for finding the shortest paths from a single node to a single destination node by stopping the algorithm once the shortest path to the destination node has been determined. For example, if the nodes of the graph represent cities and costs of edge paths represent driving distances between pairs of cities connected by a direct road (for simplicity, ignore red lights, stop signs, toll roads and other obstructions), then Dijkstra's algorithm can be used to find the shortest route between one city and all other cities. A widely used application of shortest path algorithms is network routing protocols, most notably IS-IS (Intermediate System to Intermediate System) and OSPF (Open Shortest Path First). It is also employed as a subroutine in other algorithms such as Johnson's. The Dijkstra algorithm uses labels that are positive integers or real numbers, which are totally ordered.  It can be generalized to use any labels that are partially ordered, provided the subsequent labels (a subsequent label is produced when traversing an edge) are monotonically non-decreasing.  This generalization is called the generic Dijkstra shortest-path algorithm.Dijkstra's algorithm uses a data structure for storing and querying partial solutions sorted by distance from the start. Dijkstra's original algorithm does not use a min-priority queue and runs in time                         Θ         (                    |                  V                                 |                                   2                             )                 \{\textbackslash displaystyle \textbackslash Theta (|V|\^\{2\})\}   (where                                    |                  V                    |                          \{\textbackslash displaystyle |V|\}    is the number of nodes). The idea of this algorithm is also given in Leyzorek et al. 1957. Fredman \& Tarjan 1984 propose using a Fibonacci heap min-priority queue to optimize the running time complexity to                         Θ         (                    |                  E                    |                  +                    |                  V                    |                  log         ⁡                    |                  V                    |                  )                 \{\textbackslash displaystyle \textbackslash Theta (|E|+|V|\textbackslash log |V|)\}   . This is asymptotically the fastest known single-source shortest-path algorithm for arbitrary directed graphs with unbounded non-negative weights. However, specialized cases (such as bounded/integer weights, directed acyclic graphs etc.) can indeed be improved further as detailed in Specialized variants. Additionally, if preprocessing is allowed algorithms such as contraction hierarchies can be up to seven orders of magnitude faster. In some fields, artificial intelligence in particular, Dijkstra's algorithm or a variant of it is known as uniform cost search and formulated as an instance of the more general idea of best-first search.},
  langid = {english},
  annotation = {Page Version ID: 1188007139},
  file = {/home/eric/Zotero/storage/S7TLIVBT/Dijkstra's_algorithm.html}
}
